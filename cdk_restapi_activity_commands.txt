1. Create dynamodb table
2. Create lambda to put and scan dynamodb table
3. Create API to handle post and get with background lambda
4. Validate api calls with openapi3.0
5. Create postman collection



https://<host>/restapis/<restapi_id>/stages/<stage_name>/exports/oas30
https://1edfvd4dq6.execute-api.us-west-2.amazonaws.com/prod/ 
https://1edfvd4dq6.execute-api.us-west-2.amazonaws.com/restapis/1edfvd4dq6/stages/prod/exports/oas30        
------------------------------------
Install python3 on windows
install awscli2 on windows
Install nodejs on windows
npm install -g aws-cdk
aws configure

mkdir AnnouncementApp && cd AnnouncementApp
cdk init app --language python
source .env/bin/activate
.env\Scripts\activate.bat
	pip install -r requirements.txt
	cdk bootstrap
	cdk deploy AnnouncementApp
	Do the changes in files as per requirement
	cdk destroy
---------------------------------------
"payload":{"Item": {"atitle": "ATitle1", "adescription": "ADescription1", "adate": "2020-08-23",  "astatus": "0"}}

https://aws.amazon.com/blogs/developer/getting-started-with-the-aws-cloud-development-kit-and-python/


queryTracksFunction.addPermission('APIGateway', {
  principal: new iam.ServicePrincipal('apigateway.amazonaws.com')
});

------------
“context” : {
 “account-id” : “$context.identity.accountId”,
 “api-id” : “$context.apiId”,
 “api-key” : “$context.identity.apiKey”,
 “authorizer-principal-id” : “$context.authorizer.principalId”,
 “caller” : “$context.identity.caller”,
 “cognito-authentication-provider” : “$context.identity.cognitoAuthenticationProvider”,
 “cognito-authentication-type” : “$context.identity.cognitoAuthenticationType”,
 “cognito-identity-id” : “$context.identity.cognitoIdentityId”,
 “cognito-identity-pool-id” : “$context.identity.cognitoIdentityPoolId”,
 “http-method” : “$context.httpMethod”,
 “stage” : “$context.stage”,
 “source-ip” : “$context.identity.sourceIp”,
 “user” : “$context.identity.user”,
 “user-agent” : “$context.identity.userAgent”,
 “user-arn” : “$context.identity.userArn”,
 “request-id” : “$context.requestId”,
 “resource-id” : “$context.resourceId”,
 “resource-path” : “$context.resourcePath”
 }
 